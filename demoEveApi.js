// Generated by CoffeeScript 1.7.1
/*(function() {
  var Q, client, fs, neow, params;

  Q = require('q');

  fs = require('q-io/fs');

  neow = require('./src');*/
  neow = require('neow');

  params = require('./config.json');

  client = new neow.EveClient(params, 'https://api.eveonline.com');

  client.fetch('eve:SkillTree').then(function(result) {
    var flatSkills, grp, grpID, hasGroup, rskl, rsklID, skl, sklID, _ref, _ref1, _ref2, _results;
    flatSkills = {};
    _ref = result.skillGroups;
    for (grpID in _ref) {
      grp = _ref[grpID];
      _ref1 = grp.skills;
      for (sklID in _ref1) {
        skl = _ref1[sklID];
        flatSkills[sklID] = skl;
      }
    }
    _ref2 = result.skillGroups;
    _results = [];
    for (grpID in _ref2) {
      grp = _ref2[grpID];
      hasGroup = false;
      _results.push((function() {
        var _ref3, _results1;
        _ref3 = grp.skills;
        _results1 = [];
        for (sklID in _ref3) {
          skl = _ref3[sklID];
          if (skl.published !== '0') {
            if (!hasGroup) {
              hasGroup = true;
              console.log(grp.groupName);
            }
            console.log("> " + skl.typeName + " x" + skl.rank.content);
            _results1.push((function() {
              var _ref4, _results2;
              _ref4 = skl.requiredSkills;
              _results2 = [];
              for (rsklID in _ref4) {
                rskl = _ref4[rsklID];
                _results2.push(console.log("  - " + flatSkills[rsklID].typeName + " " + neow.format.romanSkill[rskl.skillLevel || 0]));
              }
              return _results2;
            })());
          } else {
            _results1.push(void 0);
          }
        }
        return _results1;
      })());
    }
    return _results;
  }).done();

  setTimeout(function() {
    return client.fetch('account:Characters').get('characters').then(function(characters) {
      var character, characterID;
      for (characterID in characters) {
        character = characters[characterID];
        return characterID;
      }
    }).then(function(characterID) {
      return Q.all([
        client.fetch('eve:SkillTree'), client.fetch('char:CharacterSheet', {
          characterID: characterID
        })
      ]);
    }).then(function(_arg) {
      var characterSheet, flatSkills, grp, grpID, skillPointsNextLevel, skillTree, skl, sklID, sklMultiplier, stSkill, totalSP, _ref, _ref1, _ref2;
      skillTree = _arg[0], characterSheet = _arg[1];
      flatSkills = {};
      _ref = skillTree.skillGroups;
      for (grpID in _ref) {
        grp = _ref[grpID];
        _ref1 = grp.skills;
        for (sklID in _ref1) {
          skl = _ref1[sklID];
          flatSkills[sklID] = skl;
        }
      }
      console.log("" + characterSheet.name.content + " (ID " + characterSheet.characterID.content + ")");
      totalSP = 0;
      _ref2 = characterSheet.skills;
      for (sklID in _ref2) {
        skl = _ref2[sklID];
        stSkill = flatSkills[sklID];
        sklMultiplier = stSkill.rank.content > 1 ? " x" + stSkill.rank.content : "";
        skillPointsNextLevel = neow.eve.skillpointsToLevel[Math.min(parseInt(skl.level) + 1, 5)] * stSkill.rank.content;
        console.log("- " + stSkill.typeName + " " + neow.format.romanSkill[skl.level | 0] + sklMultiplier + " (" + skl.skillpoints + " / " + skillPointsNextLevel + ")");
        totalSP += parseInt(skl.skillpoints);
      }
      return console.log("Total " + totalSP + " skillpoints.");
    }).done();
  }, 2000);

}).call(this);
